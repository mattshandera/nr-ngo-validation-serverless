service: validation-service

frameworkVersion: '2'

plugins:
  - serverless-offline
  - serverless-plugin-typescript
  - serverless-dotenv-plugin
  - serverless-iam-roles-per-function

custom:
  defaultStage: dev
  defaultRegion: eu-central-1
  environment: ${file(.env):${self:provider.stage}, file(.env):default}

  dotenv:
    path: ./.env
    logging: false
    include:
      - STAGE
      - REGION
      - LOOKUP_API_URL
      - CONSTRAINT_API_URL
      - CONSTRAINT_ID
      - SESSION_KEY

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, self:custom.defaultStage}
  region: ${opt:region, self:custom.defaultRegion}
  environment:
    TEST: ${env:TEST, 'default_value'}

functions:
  validate:
    handler: src/functions/validator.validate
    description: Validates organization with Tech Soup API
    events:
      - http:
          path: /validate
          method: get
          cors: true
    memorySize: 512
  validate-token:
    handler: src/functions/validate-token.validateToken
    description: Validates token - checks if token was already used (checks the database)
    iamRoleStatementsName: get-item
    iamRoleStatements:
      - Effect: "Allow"        
        Action:
          - dynamodb:Query
          - dynamodb:GetItem
          - dynamodb:DescribeTable
        Resource: "arn:aws:dynamodb:eu-central-1:*:table/ValidationAttempts"
    events:
      - http:
          path: /validateToken
          method: get
          cors: true
    memorySize: 512
